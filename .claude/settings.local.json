{
  "permissions": {
    "allow": [
      "Bash(npm install react-router-dom)",
      "Bash(unzip -p examples/tinder-data.zip \"*/data.json\")",
      "Bash(npm test -- --run src/lib/parsers/tinder-parser.test.ts)",
      "Bash(node -e \"\nconst fs = require(''fs'');\nconst { tinderParser } = require(''./dist/lib/parsers/tinder-parser.js'');\n\n// This won''t work because we need to build first\nconsole.log(''Need to test with actual file...'');\n\")",
      "Bash(npx eslint src/lib/parsers/tinder-parser.ts)",
      "Bash(unzip -p examples/hinge-data.zip \"export/matches.json\")",
      "Bash(npx eslint src/lib/parsers/hinge-parser.ts src/lib/parsers/index.ts)",
      "Bash(npm install express cors dotenv)",
      "Bash(npm install --save-dev @types/express @types/cors)",
      "Bash(npm install --save-dev concurrently)",
      "Bash(npm run server:dev)",
      "Bash(curl -s http://localhost:3001/health)",
      "Bash(node -e \"const data = require(''''fs'''').readFileSync(0, ''''utf-8''''); console.log(JSON.stringify(JSON.parse(data), null, 2))\")",
      "Bash(curl -s -I -H \"Origin: http://localhost:3000\" http://localhost:3001/health)",
      "Bash(test -f .env)",
      "Bash(curl -s -X POST http://localhost:3001/api/analyze -H \"Content-Type: application/json\" -d '{\"\"\"\"messages\"\"\"\":[],\"\"\"\"matches\"\"\"\":[],\"\"\"\"participants\"\"\"\":[],\"\"\"\"userId\"\"\"\":\"\"\"\"test\"\"\"\",\"\"\"\"platform\"\"\"\":\"\"\"\"tinder\"\"\"\"}')",
      "Bash(curl -s -X POST http://localhost:3001/api/analyze -H \"Content-Type: application/json\" -d '{\"\"messages\"\":[],\"\"matches\"\":[],\"\"participants\"\":[],\"\"userId\"\":\"\"test\"\",\"\"platform\"\":\"\"tinder\"\"}')",
      "Bash(curl -s -w \"\\nHTTP Status: %{http_code}\\n\" -X POST http://localhost:3001/api/analyze -H \"Content-Type: application/json\" -d '{\"\"messages\"\":[],\"\"matches\"\":[],\"\"participants\"\":[],\"\"userId\"\":\"\"test\"\",\"\"platform\"\":\"\"tinder\"\"}')",
      "Bash(curl -s -w \"\\nHTTP Status: %{http_code}\\n\" -X POST http://localhost:3001/api/analyze -H \"Content-Type: application/json\" -d '{\"\"platform\"\":\"\"tinder\"\"}')",
      "Bash(npx eslint src/pages/UploadPage.tsx src/api/client.ts)",
      "Bash(npx eslint src/components/results/AnalysisResultsDisplay.tsx src/pages/UploadPage.tsx)",
      "Bash(npx eslint src/lib/parsers/tinder-parser.ts src/pages/UploadPage.tsx)",
      "Bash(npx eslint src/lib/analyzers/safety-screener.ts src/lib/analyzers/safety-screener.test.ts src/components/results/AnalysisResultsDisplay.tsx)",
      "Bash(npx eslint src/lib/analyzers/safety-screener.ts src/lib/analyzers/safety-screener.test.ts)",
      "Bash(perl -pi -e \"s/''openai\\/gpt-4-turbo''/''openai\\/gpt-5''/g\" src/lib/analyzers/chronology-mapper.test.ts src/lib/analyzers/pattern-recognizer.test.ts src/lib/analyzers/stage2-comprehensive.test.ts src/lib/evaluators/risk-evaluator.test.ts)",
      "Bash(perl -pi -e \"s/''gpt-4-turbo''/''gpt-5''/g\" src/lib/evaluators/risk-evaluator.test.ts)",
      "Bash(perl -pi -e \"s/''openai\\/gpt-4''/''openai\\/gpt-5''/g\" src/lib/evaluators/risk-evaluator.test.ts)"
    ],
    "deny": [],
    "ask": []
  }
}
